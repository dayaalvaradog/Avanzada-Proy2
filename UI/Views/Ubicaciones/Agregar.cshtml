@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@using Core.Entidades
@model UbicacionViewModel;

<h2>Agregar Ubicación</h2>

<form id="AgregarUbicacion" asp-action="Agregar" method="post">
    <div class="form-group">
        <label>Nombre Ubicación</label>
        <input asp-for="nombre" class="form-control" />
    </div>
    <div class="form-group">
        <label>Descripción</label>
        <textarea asp-for="descripcion" class="form-control"></textarea>
    </div>
    <div class="form-group">
        <label>Condiciones Almacenamiento</label>
        <input asp-for="condicionesAlmacenamiento" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
</form>
<div id="mensaje" class="mt-3"></div>

@section Scripts {
    <script>
        document.getElementById('AgregarUbicacion').addEventListener('submit', async function(e) {
            e.preventDefault();

            const mensajeDiv = document.getElementById('mensaje');
            mensajeDiv.innerHTML = '';

            const formData = new FormData(this);
            const ubicacionData = {
                nombre: formData.get('nombre'),
                descripcion: formData.get('descripcion'),
                condicionesAlmacenamiento: formData.get('condicionesAlmacenamiento')
            };

            const API_BASE_URL = "@Configuration["AppSettings:ApiBaseUrl"]";
            const apiUrl = `${API_BASE_URL}/api/Ubicaciones`;

            try {
                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(ubicacionData)
                });

                if (response.ok) {
                    const result = await response.json();
                    mensajeDiv.className = 'alert alert-success';
                    mensajeDiv.innerHTML = `Ubicación '${result.nombre}' ingresado exitosamente con ID: ${result.idUbicacion}.`;
                    this.reset();
                } else {
                    const errorData = await response.json();
                    mensajeDiv.className = 'alert alert-danger';
                    let errorMessage = 'Error al ingresar ubicación: ';
                    if (errorData.errors) {
                        for (const key in errorData.errors) {
                            errorMessage += `${key}: ${errorData.errors[key].join(', ')} `;
                        }
                    } else {
                        errorMessage += errorData.title || errorData.detail || JSON.stringify(errorData);
                    }
                    mensajeDiv.innerHTML = errorMessage;
                    console.error('Error del API:', errorData);
                }
            } catch (error) {
                console.error('Error de red al guardar la ubicación:', error);
                mensajeDiv.className = 'alert alert-danger';
                mensajeDiv.innerHTML = `Ocurrió un error de red: ${error.message}. Asegúrate de que la API está corriendo y las configuraciones de CORS son correctas.`;
            }
        });
    </script>
}